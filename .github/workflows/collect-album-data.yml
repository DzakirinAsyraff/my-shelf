name: Collect Album Data

on:
  issues:
    types: [opened]
    
permissions:
  contents: write
  issues: read

jobs:
  collect-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Parse issue form data
        id: parse
        run: |
          # Extract artist and album from issue body
          ARTIST=$(echo '${{ github.event.issue.body }}' | grep -A1 "### Artist Name" | tail -1 | xargs)
          ALBUM=$(echo '${{ github.event.issue.body }}' | grep -A1 "### Album Name" | tail -1 | xargs)
          echo "ARTIST_NAME=$ARTIST" >> $GITHUB_OUTPUT
          echo "ALBUM_NAME=$ALBUM" >> $GITHUB_OUTPUT

      - name: Run album data collection script
        env:
          ARTIST_NAME: ${{ steps.parse.outputs.ARTIST_NAME }}
          ALBUM_NAME: ${{ steps.parse.outputs.ALBUM_NAME }}
          SPOTIFY_API_KEY: ${{ secrets.SPOTIFY_API_KEY }}
        run: |
          python scripts/find_album.py "$ARTIST_NAME" "$ALBUM_NAME"

      - name: Commit album data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [ -f data/albums.json ]; then
            git add data/albums.json
            git commit -m "Add album data for ${{ steps.parse.outputs.ARTIST_NAME }} - ${{ steps.parse.outputs.ALBUM_NAME }}"
            git push
          else
            echo "No album data file was created"
          fi